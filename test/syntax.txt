Syntax:

comments start with '#'

statement := sound_change | feature_def | class_def | global_exec

sound_change := rule ['/' option+] [: pos+] ';'

rule := simple_rule | compound_rule

simple_rule := string '->' string ['(' env_string (| env_string)* ')']

compound_rule := '{' (simple_rule ';'* '}'

string := alternation

string_noalt := char*

char := char_without_repeat ['+' | '*' | '?' | repeat_n]

repeat_n := '{' repeat_n_inner '}'

repeat_n_inner := number [',' [number]]

char_without_repeat := grouping | simple_char

grouping := '[' string ']'

alternation := string_noalt ('|' string_noalt)*

simple_char := phonemes | char_matcher

char_matcher := '$(' class [':' int]
  ['|' class_constraints | '/' enumeration] ')'

class_constraints := class_constraint | class_constraint ',' class_constraints

class_constraint := feature_name op feature_instance*

enumeration = phoneme (',' phoneme)*

op := '=' | '!='

env_string := env_char*

env_char := char | '~'

feature_def := 'feature' feature_name ['*'] ['ordered'] '{' feature_body* '}'

feature_body := feature_instance ':' phoneme+ ';'

class_def := 'class' class '=' phoneme+ ';'

global_exec := 'executeOnce' lua_code
