class C = p f m t s l n k x ŋ h;
class V = a e i o u;

feature pa {
  lb: p f m;
  av: t s l n;
  ve: k x ŋ;
  gl: h;
}

feature ma {
  pl: p t k;
  fr: f s x h;
  la: l;
  na: m n ŋ;
}

feature oops* {
  oops: p;
  woah: k;
}

# Try replacing the thing after the slash with any of the following:
# ltr rtl once loopnsi loopsi
$(C:1|pa=lb) -> $(C:1|pa=av) (_ e) / loopsi;
s -> ss;
a -> o (_ ~);
pp -> p;
-> e (~ _ ŋ);
e -> (k _ t);
-> i (t _ ~);
$(C:1|pa!=ve) -> $(C:1|ma=na) (_ ŋ);

# This is an invalid rule, and ztš used to crash on it,
# but now the validator catches it!
# $(C:1|pa=lb) -> $(C:2|pa=av);

# Try to make a velar lateral
# This doesn't crash but you'll be warned.
$(C:1|pa=ve) -> $(C:1|ma=la) (_ ~);

# An example of replacing when the environment is mismatched.
e -> o !(t _ t);

# Should give an error
# $(C:1|ma=fr) -> $(C:1|oops=woah);

# Enumerating matcher
$(C:1/m,t)$(C:1/t,m) -> ŋ / loopsi;
$(C:1/p,k) -> $(C:1/k,p) / loopsi;

# Should give an error
# $(C:1|pa!=ve) -> $(C:1|ma!=na) (_ ŋ);
